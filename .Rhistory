str(hd)
dim(hd)
summary(hd)
str(gii)
dim(gii)
summary(gii)
colnames(hd)[1:8] <- c("HDI.rank", "country", "HDI.index", "life_expect", "exp_edu", "mean_edu", "GNI_capita", "GNI-HDI")
colnames(gii)[1:10] <- c("GII.rank", "country", "GII_index", "mortal_ratio", "birth_rate", "rep_parlem", "edu2F", "edu2M", "laborF", "laborM")
library(dplyr)
gii <- mutate(gii, edu2_ratio = (edu2F/edu2M))
gii <- mutate(gii, labor_ratio = (laborF/laborM))
library(ggplot2)
join_by <- c("country")
human <- inner_join(hd, gii, by = join_by, suffix = c(".hd", ".gii"))
colnames(human)
glimpse(human)
write.csv(human, "c:/Data/IODS-project/human.csv")
str(human)
dim(human)
#human <- mutate(human, GNI_capita = as.numeric(human$GNI_capita))
str(human)
dim(human)
human$GNI_capita
sub(".","",human$GNI_capita, fixed = T)
human$GNI_capita <-sub(".","",human$GNI_capita, fixed = T)
human$GNI_capita <- as.numeric(human$GNI_capita)
str(human$GNI_capita)
str(human)
dim(human)
human$GNI_capita <-sub(".","",human$GNI_capita, fixed = T)
human$GNI_capita <- as.numeric(human$GNI_capita)
str(human$GNI_capita)
human$GNI_capita <- as.numeric(human$GNI_capita)
str(human$GNI_capita)
str(hd)
dim(hd)
summary(hd)
str(gii)
dim(gii)
summary(gii)
colnames(human)
glimpse(human)
human$GNI_capita <- as.numeric(human$GNI_capita)
str(human$GNI_capita)
human$GNI_capita <-sub(".","",human$GNI_capita, fixed = T)
str(human$GNI_capita)
human$GNI_capita
sub(".","",human$GNI_capita, fixed = T)
human$GNI_capita <-sub(".","",human$GNI_capita, fixed = T)
human$GNI_capita <- as.numeric(human$GNI_capita)
str(human$GNI_capita)
human <- mutate(human, GNI_capita = as.numeric(human$GNI_capita))
str(human)
dim(human)
# Exercise 4: Data wrangling for the next exercise
# Reading the “Human development” and “Gender inequality” datasets into R.
hd <- read.csv("http://s3.amazonaws.com/assets.datacamp.com/production/course_2218/datasets/human_development.csv", stringsAsFactors = F)
gii <- read.csv("http://s3.amazonaws.com/assets.datacamp.com/production/course_2218/datasets/gender_inequality.csv", stringsAsFactors = F, na.strings = "..")
# Exploring the datasets: looking at the structure and dimensions of the data.
str(hd)
dim(hd)
summary(hd)
# Human development (HD) datasets has 195 observations (i.e., rows, each of which is a country) and 8 variables.
str(gii)
dim(gii)
summary(gii)
# Gender inequality (gii) datasets has 195 observations (i.e., rows, each of which is a country) and 12 variables.
# Now, let us rename the variables to make them shorter and easier to read.
colnames(hd)[1:8] <- c("HDI.rank", "country", "HDI.index", "life_expect", "exp_edu", "mean_edu", "GNI_capita", "GNI-HDI")
colnames(gii)[1:10] <- c("GII.rank", "country", "GII_index", "mortal_ratio", "birth_rate", "rep_parlem", "edu2F", "edu2M", "laborF", "laborM")
# We now create two new variables: the ratio of Female and Male populations and the ratio of labour force participation of females and males in each country.
library(dplyr)
gii <- mutate(gii, edu2_ratio = (edu2F/edu2M))
gii <- mutate(gii, labor_ratio = (laborF/laborM))
#Join together the two datasets using the variable Country as the identifier, and call the new dataset as "human".
library(ggplot2)
join_by <- c("country")
human <- inner_join(hd, gii, by = join_by, suffix = c(".hd", ".gii"))
# looking at the colnames
colnames(human)
glimpse(human)
# Saving the dataset
write.csv(human, "c:/Data/IODS-project/human.csv")
# Looking at the strucutre and dimensions of the dataset
str(human)
dim(human)
# please ignore the following, as it belongs to the next week exercise :)
#human <- mutate(human, GNI_capita = as.numeric(human$GNI_capita))
human$GNI_capita
#sub(".","",human$GNI_capita, fixed = T)
human$GNI_capita <-sub(".","",human$GNI_capita, fixed = T)
human$GNI_capita <- as.numeric(human$GNI_capita)
str(human$GNI_capita)
#str(human)
#dim(human)
human <- read.table("http://s3.amazonaws.com/assets.datacamp.com/production/course_2218/datasets/human1.txt", sep  =",", header = T)
str(human)
dim(human)
human$GNI <- as.numeric(human$GNI)
str(human)
names(human)
str(human$GNI)
str(human$GNI)
str(human$GNI)
str(human$GNI)
# Ali Ahi
# This the exercise on Dimensionality and reduction techniques using human datase developed by the United Nations.
# The original data source can be found here: http://s3.amazonaws.com/assets.datacamp.com/production/course_2218/datasets/human1.txt
# Exercise 5: Dimensionality reduction techniques
human <- read.table("http://s3.amazonaws.com/assets.datacamp.com/production/course_2218/datasets/human1.txt", sep  =",", header = T)
str(human)
dim(human)
names(human)
str(human$GNI)
library(stringer)
str_replace(human$GNI, pattern = ",", replace = "")
library(stringr)
str_replace(human$GNI, pattern = ",", replace = "")
str_replace(human$GNI, pattern = ",", replace = "") %>% as.numeric(human$GNI)
keep <- c("Country", "Edu2.FM", "Labo.FM", "Life.Exp", "Edu.Exp", "GNI", "Mat.Mor", "Ado.Birth", "Parli.F")
complete.cases(human)
data.frame(human[-1], comp = complete.cases(human))
human_ <- filter(human, complete.cases(human))
tail(human, 10)
# now we creat object "last" by defining it as the last 7 rows (region names)
last <- nrow(human) - 7
# Now we add countries as rownames
rownames(human) <- human$Country
str(human_)
dim(human_)
str(human)
dim(human)
human_ <- select(human, -Country)
dim(human_)
dim(human)
# first looking at the last ten rows, as the regions names are there.
tail(human, 10)
# Ali Ahi
# This the exercise on Dimensionality and reduction techniques using human datase developed by the United Nations.
# The original data source can be found here: http://s3.amazonaws.com/assets.datacamp.com/production/course_2218/datasets/human1.txt
# Exercise 5: Dimensionality reduction techniques
# Fisrt, we read the data into R.
human <- read.table("http://s3.amazonaws.com/assets.datacamp.com/production/course_2218/datasets/human1.txt", sep  =",", header = T)
# Let us look at the structure of the data and the names of the variables:
str(human)
dim(human)
names(human)
# By looking the structure of the data, we can see that the variable GNI is read as factor in R not number:
str(human$GNI)
# We now mutate GNI from factor to number by replacing "," with "", and then use as.number function.
library(stringr)
str_replace(human$GNI, pattern = ",", replace = "") %>% as.numeric(human$GNI)
# Let us now exclude unneeded variabes, keeing only the following columns in the code
keep <- c("Country", "Edu2.FM", "Labo.FM", "Life.Exp", "Edu.Exp", "GNI", "Mat.Mor", "Ado.Birth", "Parli.F")
# Now we remove all rows with missing values
complete.cases(human)
data.frame(human[-1], comp = complete.cases(human))
# filtering out all rows with NA values
human_ <- filter(human, complete.cases(human))
# Removing the observation which relate to regions
# first looking at the last ten rows, as the regions names are there.
tail(human, 10)
# We can see that the last seven rows include the region names.
# now we creat object "last" by defining it as the last 7 rows.
last <- nrow(human) - 7
# Now we choose everythin until the last 7 observation
human_ <- human[1:last, ]
# Now we add countries as rownames
rownames(human_) <- human$Country
human_ <- select(human, -Country)
dim(human_)
dim(human)
# now we creat object "last" by defining it as the last 7 rows.
last <- nrow(human) - 7
# Now we choose everythin until the last 7 observation
human_ <- human[1:last, ]
# Now we add countries as rownames
rownames(human_) <- human$Country
# Now we add countries as rownames
rownames(human_) <- human_$Country
human_ <- select(human, -Country)
library(dplyr)
library(dplyr)
human_ <- dplyr::select(human, -Country)
dim(human_)
dim(human)
# Ali Ahi
# This the exercise on Dimensionality and reduction techniques using human datase developed by the United Nations.
# The original data source can be found here: http://s3.amazonaws.com/assets.datacamp.com/production/course_2218/datasets/human1.txt
# Exercise 5: Dimensionality reduction techniques
# Fisrt, we read the data into R.
human <- read.table("http://s3.amazonaws.com/assets.datacamp.com/production/course_2218/datasets/human1.txt", sep  =",", header = T)
# Let us look at the structure of the data and the names of the variables:
str(human)
dim(human)
names(human)
# By looking the structure of the data, we can see that the variable GNI is read as factor in R not number:
str(human$GNI)
# We now mutate GNI from factor to number by replacing "," with "", and then use as.number function.
library(stringr)
str_replace(human$GNI, pattern = ",", replace = "") %>% as.numeric(human$GNI)
# Let us now exclude unneeded variabes, keeing only the following columns in the code
keep <- c("Country", "Edu2.FM", "Labo.FM", "Life.Exp", "Edu.Exp", "GNI", "Mat.Mor", "Ado.Birth", "Parli.F")
# Now we remove all rows with missing values
complete.cases(human)
data.frame(human[-1], comp = complete.cases(human))
# filtering out all rows with NA values
human_ <- filter(human, complete.cases(human))
# Removing the observation which relate to regions
# first looking at the last ten rows, as the regions names are there.
tail(human, 10)
# We can see that the last seven rows include the region names.
# now we creat object "last" by defining it as the last 7 rows.
last <- nrow(human) - 7
# Now we choose everythin until the last 7 observation
human_ <- human[1:last, ]
# Now we add countries as rownames
rownames(human_) <- human_$Country
library(dplyr)
human_ <- dplyr::select(human, -Country)
dim(human_)
dim(human)
human_ <- select(human, -Country)
dim(human_)
# Ali Ahi
# This the exercise on Dimensionality and reduction techniques using human datase developed by the United Nations.
# The original data source can be found here: http://s3.amazonaws.com/assets.datacamp.com/production/course_2218/datasets/human1.txt
# Exercise 5: Dimensionality reduction techniques
# Fisrt, we read the data into R.
human <- read.table("http://s3.amazonaws.com/assets.datacamp.com/production/course_2218/datasets/human1.txt", sep  =",", header = T)
# Let us look at the structure of the data and the names of the variables:
str(human)
dim(human)
names(human)
# By looking the structure of the data, we can see that the variable GNI is read as factor in R not number:
str(human$GNI)
# We now mutate GNI from factor to number by replacing "," with "", and then use as.number function.
library(stringr)
str_replace(human$GNI, pattern = ",", replace = "") %>% as.numeric(human$GNI)
# Let us now exclude unneeded variabes, keeing only the following columns in the code
keep <- c("Country", "Edu2.FM", "Labo.FM", "Life.Exp", "Edu.Exp", "GNI", "Mat.Mor", "Ado.Birth", "Parli.F")
library(dplyr)
human <- dplyr::select(human, one_of(keep))
# Now we remove all rows with missing values
complete.cases(human)
data.frame(human[-1], comp = complete.cases(human))
# filtering out all rows with NA values
human_ <- filter(human, complete.cases(human))
# Removing the observation which relate to regions
# first looking at the last ten rows, as the regions names are there.
tail(human, 10)
# We can see that the last seven rows include the region names.
# now we creat object "last" by defining it as the last 7 rows.
last <- nrow(human) - 7
# Now we choose everythin until the last 7 observation
human_ <- human[1:last, ]
# Now we add countries as rownames
rownames(human_) <- human_$Country
human_ <- select(human, -Country)
dim(human_)
dim(human)
human_NA <- filter(human, TRUE)
# Ali Ahi
# This the exercise on Dimensionality and reduction techniques using human datase developed by the United Nations.
# The original data source can be found here: http://s3.amazonaws.com/assets.datacamp.com/production/course_2218/datasets/human1.txt
# Exercise 5: Dimensionality reduction techniques
# Fisrt, we read the data into R.
human <- read.table("http://s3.amazonaws.com/assets.datacamp.com/production/course_2218/datasets/human1.txt", sep  =",", header = T)
# Let us look at the structure of the data and the names of the variables:
str(human)
dim(human)
names(human)
# By looking the structure of the data, we can see that the variable GNI is read as factor in R not number:
str(human$GNI)
# We now mutate GNI from factor to number by replacing "," with "", and then use as.number function.
library(stringr)
str_replace(human$GNI, pattern = ",", replace = "") %>% as.numeric(human$GNI)
# Let us now exclude unneeded variabes, keeing only the following columns in the code
keep <- c("Country", "Edu2.FM", "Labo.FM", "Life.Exp", "Edu.Exp", "GNI", "Mat.Mor", "Ado.Birth", "Parli.F")
library(dplyr)
human <- dplyr::select(human, one_of(keep))
# Now we remove all rows with missing values
complete.cases(human)
data.frame(human[-1], comp = complete.cases(human))
# filtering out all rows with NA values
human_NA <- filter(human, TRUE)
# Removing the observation which relate to regions
# first looking at the last ten rows, as the regions names are there.
tail(human, 10)
# We can see that the last seven rows include the region names.
# now we creat object "last" by defining it as the last 7 rows.
last <- nrow(human) - 7
# Now we choose everythin until the last 7 observation
human_ <- human[1:last, ]
# Now we add countries as rownames
rownames(human_) <- human_$Country
human_ <- select(human, -Country)
dim(human_)
dim(human)
human_ <- filter(human, complete.cases(human))
# Fisrt, we read the data into R.
human <- read.table("http://s3.amazonaws.com/assets.datacamp.com/production/course_2218/datasets/human1.txt", sep  =",", header = T)
# Let us look at the structure of the data and the names of the variables:
str(human)
dim(human)
names(human)
# By looking the structure of the data, we can see that the variable GNI is read as factor in R not number:
str(human$GNI)
# We now mutate GNI from factor to number by replacing "," with "", and then use as.number function.
library(stringr)
str_replace(human$GNI, pattern = ",", replace = "") %>% as.numeric(human$GNI)
# Let us now exclude unneeded variabes, keeing only the following columns in the code
keep <- c("Country", "Edu2.FM", "Labo.FM", "Life.Exp", "Edu.Exp", "GNI", "Mat.Mor", "Ado.Birth", "Parli.F")
library(dplyr)
human <- dplyr::select(human, one_of(keep))
# Now we remove all rows with missing values
complete.cases(human)
data.frame(human[-1], comp = complete.cases(human))
# filtering out all rows with NA values
human_ <- filter(human, complete.cases(human))
# Removing the observation which relate to regions
# first looking at the last ten rows, as the regions names are there.
tail(human, 10)
# We can see that the last seven rows include the region names.
# now we creat object "last" by defining it as the last 7 rows.
last <- nrow(human) - 7
# Now we choose everythin until the last 7 observation
human_ <- human[1:last, ]
# Now we add countries as rownames
rownames(human_) <- human_$Country
human_ <- select(human, -Country)
dim(human_)
dim(human)
dim(human_)
library(dplyr)
human <- dplyr::select(human, one_of(keep))
library(dplyr)
human <- dplyr::select(human, one_of(keep))
# Now we remove all rows with missing values
complete.cases(human)
data.frame(human[-1], comp = complete.cases(human))
# filtering out all rows with NA values
human_ <- filter(human, complete.cases(human))
dim(human_)
# Ali Ahi
# This the exercise on Dimensionality and reduction techniques using human datase developed by the United Nations.
# The original data source can be found here: http://s3.amazonaws.com/assets.datacamp.com/production/course_2218/datasets/human1.txt
# Exercise 5: Dimensionality reduction techniques
# Fisrt, we read the data into R.
human <- read.table("http://s3.amazonaws.com/assets.datacamp.com/production/course_2218/datasets/human1.txt", sep  =",", header = T)
# Let us look at the structure of the data and the names of the variables:
str(human)
dim(human)
names(human)
# By looking the structure of the data, we can see that the variable GNI is read as factor in R not number:
str(human$GNI)
# We now mutate GNI from factor to number by replacing "," with "", and then use as.number function.
library(stringr)
str_replace(human$GNI, pattern = ",", replace = "") %>% as.numeric(human$GNI)
# Let us now exclude unneeded variabes, keeing only the following columns in the code
keep <- c("Country", "Edu2.FM", "Labo.FM", "Life.Exp", "Edu.Exp", "GNI", "Mat.Mor", "Ado.Birth", "Parli.F")
library(dplyr)
human <- dplyr::select(human, one_of(keep))
# Now we remove all rows with missing values
complete.cases(human)
data.frame(human[-1], comp = complete.cases(human))
# filtering out all rows with NA values
human_ <- filter(human, complete.cases(human))
dim(human_)
# Removing the observation which relate to regions
# first looking at the last ten rows, as the regions names are there.
tail(human, 10)
# We can see that the last seven rows include the region names.
# now we creat object "last" by defining it as the last 7 rows.
last <- nrow(human) - 7
# Now we choose everythin until the last 7 observation
human_ <- human[1:last, ]
# Now we add countries as rownames
rownames(human_) <- human_$Country
human_ <- select(human, -Country)
dim(human_)
dim(human)
# Fisrt, we read the data into R.
human <- read.table("http://s3.amazonaws.com/assets.datacamp.com/production/course_2218/datasets/human1.txt", sep  =",", header = T)
# We now mutate GNI from factor to number by replacing "," with "", and then use as.number function.
library(stringr)
str_replace(human$GNI, pattern = ",", replace = "") %>% as.numeric(human$GNI)
keep <- c("Country", "Edu2.FM", "Labo.FM", "Life.Exp", "Edu.Exp", "GNI", "Mat.Mor", "Ado.Birth", "Parli.F")
library(dplyr)
human <- dplyr::select(human, one_of(keep))
# Now we remove all rows with missing values
complete.cases(human)
data.frame(human[-1], comp = complete.cases(human))
# filtering out all rows with NA values
human_ <- filter(human, complete.cases(human))
dim(human_)
# first looking at the last ten rows, as the regions names are there.
tail(human, 10)
# now we creat object "last" by defining it as the last 7 rows.
last <- nrow(human) - 7
# Now we choose everythin until the last 7 observation
human_ <- human[1:last, ]
# Now we add countries as rownames
rownames(human_) <- human_$Country
human_ <- select(human, -Country)
dim(human_)
dim(human)
# Ali Ahi
# This the exercise on Dimensionality and reduction techniques using human datase developed by the United Nations.
# The original data source can be found here: http://s3.amazonaws.com/assets.datacamp.com/production/course_2218/datasets/human1.txt
# Exercise 5: Dimensionality reduction techniques
# Fisrt, we read the data into R.
human <- read.table("http://s3.amazonaws.com/assets.datacamp.com/production/course_2218/datasets/human1.txt", sep  =",", header = T)
library(stringr)
library(dplyr)
# Let us look at the structure of the data and the names of the variables:
str(human)
dim(human)
names(human)
# By looking the structure of the data, we can see that the variable GNI is read as factor in R not number:
str(human$GNI)
# We now mutate GNI from factor to number by replacing "," with "", and then use as.number function.
str_replace(human$GNI, pattern = ",", replace = "") %>% as.numeric(human$GNI)
# Let us now exclude unneeded variabes, keeing only the following columns in the code
keep <- c("Country", "Edu2.FM", "Labo.FM", "Life.Exp", "Edu.Exp", "GNI", "Mat.Mor", "Ado.Birth", "Parli.F")
human <- dplyr::select(human, one_of(keep))
# Now we remove all rows with missing values
complete.cases(human)
data.frame(human[-1], comp = complete.cases(human))
# filtering out all rows with NA values
human_ <- filter(human, complete.cases(human))
dim(human_)
# Removing the observation which relate to regions
# first looking at the last ten rows, as the regions names are there.
tail(human, 10)
# We can see that the last seven rows include the region names.
# now we creat object "last" by defining it as the last 7 rows.
last <- nrow(human) - 7
# Now we choose everythin until the last 7 observation
human_ <- human[1:last, ]
# Now we add countries as rownames
rownames(human_) <- human_$Country
human_ <- select(human, -Country)
dim(human_)
dim(human)
# Ali Ahi
# This the exercise on Dimensionality and reduction techniques using human datase developed by the United Nations.
# The original data source can be found here: http://s3.amazonaws.com/assets.datacamp.com/production/course_2218/datasets/human1.txt
# Exercise 5: Dimensionality reduction techniques
# Fisrt, we read the data into R.
human <- read.table("http://s3.amazonaws.com/assets.datacamp.com/production/course_2218/datasets/human1.txt", sep  =",", header = T)
library(stringr)
library(dplyr)
# Let us look at the structure of the data and the names of the variables:
str(human)
dim(human)
names(human)
# By looking the structure of the data, we can see that the variable GNI is read as factor in R not number:
str(human$GNI)
# We now mutate GNI from factor to number by replacing "," with "", and then use as.number function.
str_replace(human$GNI, pattern = ",", replace = "") %>% as.numeric(human$GNI)
# Let us now exclude unneeded variabes, keeing only the following columns in the code
keep <- c("Country", "Edu2.FM", "Labo.FM", "Life.Exp", "Edu.Exp", "GNI", "Mat.Mor", "Ado.Birth", "Parli.F")
human <- select(human, one_of(keep))
# Now we remove all rows with missing values
complete.cases(human)
data.frame(human[-1], comp = complete.cases(human))
# filtering out all rows with NA values
human_ <- filter(human, complete.cases(human))
dim(human_)
# Removing the observation which relate to regions
# first looking at the last ten rows, as the regions names are there.
tail(human, 10)
# We can see that the last seven rows include the region names.
# now we creat object "last" by defining it as the last 7 rows.
last <- nrow(human) - 7
# Now we choose everythin until the last 7 observation
human_ <- human[1:last, ]
# Now we add countries as rownames
rownames(human_) <- human_$Country
human_ <- select(human, -Country)
dim(human_)
dim(human)
library(GGally)
library(GGally)
dim(human_)
setwd("c:/Data/IODS-project")
write.csv(human2, file = "http://s3.amazonaws.com/assets.datacamp.com/production/course_2218/datasets/human2.txt", sep  =",", header = T)
write.csv(human2, file = "http://s3.amazonaws.com/assets.datacamp.com/production/course_2218/datasets/human2.txt")
human_std <- scale(human)
library(GGally)
library(dplyr)
library(corrplot)
human2 <- read.table("http://s3.amazonaws.com/assets.datacamp.com/production/course_2218/datasets/human2.txt", sep  =",", header = T)
str(human2)
dim(human2)
summary(human2)
ggpairs(human2)
cor(human2)
cor(human2) %>% corrplot
human_std <- scale(human)
library(GGally)
library(dplyr)
library(corrplot)
human_std <- scale(human)
human_std <- scale(human)
human_std <- scale(human)
human_std <- scale(human2)
human2_std <- scale(human2)
summary (human2_std)
pca_human2 <- prcomp(human2_std)
biplot(pca_human2, choices = 1:2, cex = c(0.8, 1), col = c("grey40", "deeppink2"))
