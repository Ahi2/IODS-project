coef(m5)
cv <- cv.glm(data = alc, cost = loss_func, glmfit = m5, K = 10)
cv$delta[1]
g5 <- ggplot(alc, aes(x = high_use, y = studytime, col = sex)) + ggtitle("Student study time and by alcohol consumption and sex")
g5 + geom_boxplot() + ylab("study time")
g6 <- ggplot(alc, aes(x = high_use, y = famrel, col = sex))
g6 + geom_boxplot() + ylab("family relationship")
m6 <- glm(high_use ~ sex + studytime + goout + famrel + absences, data = alc, family = "binomial")
summary(m6)
coef(m6)
cv <- cv.glm(data = alc, cost = loss_func, glmfit = m6, K = 10)
cv$delta[1]
g1 <- ggplot(data = alc, aes(x = high_use)) + facet_wrap("sex")
g1 + geom_bar()
alc <- read.table("C:/Data/IODS-project/alc.csv", sep=",", header=TRUE)
library(tidyr)
library(dplyr)
library(ggplot2)
g1 <- ggplot(data = alc, aes(x = high_use)) + facet_wrap("sex")
g1 <- ggplot(alc, aes(x = high_use)) + facet_wrap("sex")
g1 <- ggplot(alc, aes(x = high_use)) + facet_wrap("sex")
g1 + geom_bar()
g1 <- ggplot(alc, aes(x = high_use)) + facet_wrap("sex")
g1 + geom_bar()
g1 <- ggplot(alc, aes(x = high_use)) + facet_wrap("sex")
g1 + geom_bar()
library(tidyr)
library(dplyr)
library(ggplot2)
alc <- read.table("C:/Data/IODS-project/alc.csv", sep=",", header=TRUE)
colnames(alc)
g1 <- ggplot(alc, aes(x = high_use)) + facet_wrap("sex")
g1 + geom_bar()
g2 <- ggplot(alc, aes(x = high_use, y = G3, col = sex))
g2 + geom_boxplot() + ylab("grade")
g3 <- ggplot(alc, aes(x = high_use, y = health, col = sex)) + ggtitle("Student health by alcohol consumption and sex")
g3 + geom_boxplot() + ylab("health")
g4 <- ggplot(alc, aes(x = high_use, y = age)) + ggtitle("Student age by alcohol consumption")
g4 + geom_boxplot() + ylab("age")
```{r child = "chapter3.Rmd"}
library(ggplot2)
OR <- coef(m) %>% exp
cbind(OR, CI)
library(tidyr)
library(dplyr)
library(ggplot2)
alc %>% group_by(sex, high_use) %>% summarise(count = n(), mean_grade = mean(G3))
g1 <- ggplot(alc, aes(x = high_use, y = G3, col = sex))
g1 + geom_bar() + ylab("grade")
g1 <- ggplot(alc, aes(x = high_use, y = G3, col = sex))
g1 + geom_boxplot() + ylab("grade")
g2 <- ggplot(alc, aes(x = high_use, y = health, col = sex)) + ggtitle("Student health by alcohol consumption and sex")
g2 + geom_boxplot() + ylab("health")
g3 <- ggplot(alc, aes(x = high_use, y = age)) + ggtitle("Student age by alcohol consumption")
g3 + geom_boxplot() + ylab("age")
alc %>% group_by(sex, high_use) %>% summarise(count = n(), mean_grade = mean(G3))
m <- glm(high_use ~ sex + G3 + health + age, data = alc, family = "binomial")
m
coef(m)
summary(m)
OR <- coef(m) %>% exp
CI <- confint(m) %>% exp
cbind(OR, CI)
m2 <- glm(high_use ~ sex + G3 + age, data = alc, family = "binomial")
probabilities <- predict(m, type = "response")
alc <- mutate(alc, probability = probabilities)
alc <- mutate(alc, prediction = probability > 0.5)
select(alc, sex, G3, age, high_use, probability, prediction) %>% tail(10)
table(high_use = alc$high_use, prediction = alc$prediction)
g <- ggplot(alc, aes(x = probability, y = high_use, col = prediction))
g + geom_point()
loss_func <- function(class, prob) {
n_wrong <- abs(class - prob) > 0.5
mean(n_wrong)
}
loss_func(class = alc$high_use, prob = alc$probability)
probabilities <- predict(m2, type = "response")
alc <- mutate(alc, probability = probabilities)
alc <- mutate(alc, prediction = probability > 0.5)
select(alc, sex, G3, age, high_use, probability, prediction) %>% tail(10)
table(high_use = alc$high_use, prediction = alc$prediction)
g <- ggplot(alc, aes(x = probability, y = high_use, col = prediction))
g + geom_point()
loss_func <- function(class, prob) {
n_wrong <- abs(class - prob) > 0.5
mean(n_wrong)
}
loss_func(class = alc$high_use, prob = alc$probability)
cv <- cv.glm(data = alc, cost = loss_func, glmfit = m, K = 10)
cv$delta[1]
cv <- cv.glm(data = alc, cost = loss_func, glmfit = m2, K = 10)
cv$delta[1]
m3 <- glm(high_use ~ sex + G3, data = alc, family = "binomial")
cv <- cv.glm(data = alc, cost = loss_func, glmfit = m3, K = 10)
cv$delta[1]
m4 <- glm(high_use ~ sex + absences, data = alc, family = "binomial")
cv <- cv.glm(data = alc, cost = loss_func, glmfit = m4, K = 10)
cv$delta[1]
m5 <- glm(high_use ~ sex + age + studytime + failures + famsup + goout + famrel + health + absences, data = alc, family = "binomial")
summary(m5)
coef(m5)
cv <- cv.glm(data = alc, cost = loss_func, glmfit = m5, K = 10)
cv$delta[1]
g5 <- ggplot(alc, aes(x = high_use, y = studytime, col = sex)) + ggtitle("Student study time and by alcohol consumption and sex")
g5 + geom_boxplot() + ylab("study time")
g6 <- ggplot(alc, aes(x = high_use, y = famrel, col = sex))
g6 + geom_boxplot() + ylab("family relationship")
m6 <- glm(high_use ~ sex + studytime + goout + famrel + absences, data = alc, family = "binomial")
summary(m6)
coef(m6)
cv <- cv.glm(data = alc, cost = loss_func, glmfit = m6, K = 10)
cv$delta[1]
alc %>% group_by(sex, high_use) %>% summarise(count = n(), mean_grade = mean(G3))
```{r child = "chapter3.Rmd"}
alc %>% group_by(sex, high_use) %>% summarise(count = n(), mean_grade = mean(G3))
library(dplyr); library(ggplot2)
alc %>% group_by(sex, high_use) %>% summarise(count = n(), mean_grade = mean(G3))
library(tidyr); library(dplyr); library(ggplot2)
alc <- read.table("C:/Data/IODS-project/alc.csv", sep=",", header=TRUE)
colnames(alc)
alc %>% group_by(sex, high_use) %>% summarise(count = n(), mean_grade = mean(G3))
install.packages("magrittr")
alc <- read.table("C:/Data/IODS-project/alc.csv", sep=",", header=TRUE)
colnames(alc)
alc %>% group_by(sex, high_use) %>% summarise(count = n(), mean_grade = mean(G3))
library(magrittr)
alc <- read.table("C:/Data/IODS-project/alc.csv", sep=",", header=TRUE)
colnames(alc)
alc %>% group_by(sex, high_use) %>% summarise(count = n(), mean_grade = mean(G3))
alc %>% group_by(sex, high_use) %>% summarise(count = n(), mean_grade = mean(G3))
alc %>% group_by(sex, high_use) %>% summarise(count = n(), mean_grade = mean(G3))
library(tidyr)
library(dplyr)
library(ggplot2)
library(magrittr)
library(dplyr)
library(ggplot2)
library(tidyr)
alc %>% group_by(sex, high_use) %>% summarise(count = n(), mean_grade = mean(G3))
alc <- read.table("C:/Data/IODS-project/data/alc.csv", sep=",", header=TRUE)
alc <- read.table("C:/Data/IODS-project/data/alc.csv", sep=",", header=TRUE)
colnames(alc)
alc %>% group_by(sex, high_use) %>% summarise(count = n(), mean_grade = mean(G3))
alc <- read.table("C:/Data/IODS-project/data/alc.csv", sep=",", header=TRUE)
colnames(alc)
alc %>% group_by(sex, high_use) %>% summarise(count = n(), mean_grade = mean(G3))
alc <- read.table("C:/Data/IODS-project/alc.csv", sep=",", header=TRUE)
alc %>% group_by(sex, high_use) %>% summarise(count = n(), mean_grade = mean(G3))
library(tidyr)
library(dplyr)
library(ggplot2)
library(magrittr)
library(tidyr)
library(dplyr)
library(ggplot2)
library(magrittr)
alc <- read.table("C:/Data/IODS-project/alc.csv", sep=",", header=TRUE)
colnames(alc)
alc %>% group_by(sex, high_use) %>% summarise(count = n(), mean_grade = mean(G3))
g1 <- ggplot(alc, aes(x = high_use, y = G3, col = sex))
g1 + geom_boxplot() + ylab("grade")
g2 <- ggplot(alc, aes(x = high_use, y = health, col = sex)) + ggtitle("Student health by alcohol consumption and sex")
g2 + geom_boxplot() + ylab("health")
g3 <- ggplot(alc, aes(x = high_use, y = age)) + ggtitle("Student age by alcohol consumption")
g3 + geom_boxplot() + ylab("age")
m <- glm(high_use ~ sex + G3 + health + age, data = alc, family = "binomial")
m
coef(m)
summary(m)
OR <- coef(m) %>% exp
CI <- confint(m) %>% exp
cbind(OR, CI)
m2 <- glm(high_use ~ sex + G3 + age, data = alc, family = "binomial")
probabilities <- predict(m2, type = "response")
alc <- mutate(alc, probability = probabilities)
alc <- mutate(alc, prediction = probability > 0.5)
select(alc, sex, G3, age, high_use, probability, prediction) %>% tail(10)
table(high_use = alc$high_use, prediction = alc$prediction)
g <- ggplot(alc, aes(x = probability, y = high_use, col = prediction))
g + geom_point()
loss_func <- function(class, prob) {
n_wrong <- abs(class - prob) > 0.5
mean(n_wrong)
}
loss_func(class = alc$high_use, prob = alc$probability)
cv <- cv.glm(data = alc, cost = loss_func, glmfit = m, K = 10)
library(boot)
cv <- cv.glm(data = alc, cost = loss_func, glmfit = m, K = 10)
cv$delta[1]
alc <- read.table("C:/Data/IODS-project/alc.csv", sep=",", header=TRUE)
colnames(alc)
alc %>% group_by(sex, high_use) %>% summarise(count = n(), mean_grade = mean(G3))
g1 <- ggplot(alc, aes(x = high_use, y = G3, col = sex))
g1 + geom_boxplot() + ylab("grade")
g2 <- ggplot(alc, aes(x = high_use, y = health, col = sex)) + ggtitle("Student health by alcohol consumption and sex")
g2 + geom_boxplot() + ylab("health")
g3 <- ggplot(alc, aes(x = high_use, y = age)) + ggtitle("Student age by alcohol consumption")
g3 + geom_boxplot() + ylab("age")
m <- glm(high_use ~ sex + G3 + health + age, data = alc, family = "binomial")
m
coef(m)
summary(m)
OR <- coef(m) %>% exp
CI <- confint(m) %>% exp
cbind(OR, CI)
m2 <- glm(high_use ~ sex + G3 + age, data = alc, family = "binomial")
probabilities <- predict(m2, type = "response")
alc <- mutate(alc, probability = probabilities)
alc <- mutate(alc, prediction = probability > 0.5)
select(alc, sex, G3, age, high_use, probability, prediction) %>% tail(10)
table(high_use = alc$high_use, prediction = alc$prediction)
g <- ggplot(alc, aes(x = probability, y = high_use, col = prediction))
g + geom_point()
loss_func <- function(class, prob) {
n_wrong <- abs(class - prob) > 0.5
mean(n_wrong)
}
loss_func(class = alc$high_use, prob = alc$probability)
cv <- cv.glm(data = alc, cost = loss_func, glmfit = m, K = 10)
cv$delta[1]
m3 <- glm(high_use ~ sex + G3, data = alc, family = "binomial")
cv <- cv.glm(data = alc, cost = loss_func, glmfit = m3, K = 10)
cv$delta[1]
m4 <- glm(high_use ~ sex + absences, data = alc, family = "binomial")
cv <- cv.glm(data = alc, cost = loss_func, glmfit = m4, K = 10)
cv$delta[1]
m5 <- glm(high_use ~ sex + age + studytime + failures + famsup + goout + famrel + health + absences, data = alc, family = "binomial")
summary(m5)
coef(m5)
cv <- cv.glm(data = alc, cost = loss_func, glmfit = m5, K = 10)
cv$delta[1]
g5 <- ggplot(alc, aes(x = high_use, y = studytime, col = sex)) + ggtitle("Student study time and by alcohol consumption and sex")
g5 + geom_boxplot() + ylab("study time")
g6 <- ggplot(alc, aes(x = high_use, y = famrel, col = sex))
g6 + geom_boxplot() + ylab("family relationship")
m6 <- glm(high_use ~ sex + studytime + goout + famrel + absences, data = alc, family = "binomial")
summary(m6)
coef(m6)
cv <- cv.glm(data = alc, cost = loss_func, glmfit = m6, K = 10)
cv$delta[1]
alc <- read.table("C:/Data/IODS-project/data/alc.csv", sep=",", header=TRUE)
library(tidyr)
library(dplyr)
library(ggplot2)
library(magrittr)
alc <- read.table("C:/Data/IODS-project/data/alc.csv", sep=",", header=TRUE)
colnames(alc)
alc %>% group_by(sex, high_use) %>% summarise(count = n(), mean_grade = mean(G3))
g1 <- ggplot(alc, aes(x = high_use, y = G3, col = sex))
g1 + geom_boxplot() + ylab("grade")
g2 <- ggplot(alc, aes(x = high_use, y = health, col = sex)) + ggtitle("Student health by alcohol consumption and sex")
g2 + geom_boxplot() + ylab("health")
g3 <- ggplot(alc, aes(x = high_use, y = age)) + ggtitle("Student age by alcohol consumption")
g3 + geom_boxplot() + ylab("age")
m <- glm(high_use ~ sex + G3 + health + age, data = alc, family = "binomial")
m
coef(m)
summary(m)
OR <- coef(m) %>% exp
CI <- confint(m) %>% exp
cbind(OR, CI)
m2 <- glm(high_use ~ sex + G3 + age, data = alc, family = "binomial")
probabilities <- predict(m2, type = "response")
alc <- mutate(alc, probability = probabilities)
alc <- mutate(alc, prediction = probability > 0.5)
select(alc, sex, G3, age, high_use, probability, prediction) %>% tail(10)
table(high_use = alc$high_use, prediction = alc$prediction)
g <- ggplot(alc, aes(x = probability, y = high_use, col = prediction))
g + geom_point()
loss_func <- function(class, prob) {
n_wrong <- abs(class - prob) > 0.5
mean(n_wrong)
}
loss_func(class = alc$high_use, prob = alc$probability)
cv <- cv.glm(data = alc, cost = loss_func, glmfit = m, K = 10)
cv$delta[1]
m3 <- glm(high_use ~ sex + G3, data = alc, family = "binomial")
cv <- cv.glm(data = alc, cost = loss_func, glmfit = m3, K = 10)
cv$delta[1]
m4 <- glm(high_use ~ sex + absences, data = alc, family = "binomial")
cv <- cv.glm(data = alc, cost = loss_func, glmfit = m4, K = 10)
cv$delta[1]
m5 <- glm(high_use ~ sex + age + studytime + failures + famsup + goout + famrel + health + absences, data = alc, family = "binomial")
summary(m5)
coef(m5)
cv <- cv.glm(data = alc, cost = loss_func, glmfit = m5, K = 10)
cv$delta[1]
g5 <- ggplot(alc, aes(x = high_use, y = studytime, col = sex)) + ggtitle("Student study time and by alcohol consumption and sex")
g5 + geom_boxplot() + ylab("study time")
g6 <- ggplot(alc, aes(x = high_use, y = famrel, col = sex))
g6 + geom_boxplot() + ylab("family relationship")
m6 <- glm(high_use ~ sex + studytime + goout + famrel + absences, data = alc, family = "binomial")
summary(m6)
coef(m6)
cv <- cv.glm(data = alc, cost = loss_func, glmfit = m6, K = 10)
cv$delta[1]
alc <- read.table("C:/Data/IODS-project/alc.csv", sep=",", header=TRUE)
library("magrittr", lib.loc="C:/Data/R/Library")
alc %>% group_by(sex, high_use) %>% summarise(count = n(), mean_grade = mean(G3))
library(tidyr)
library(dplyr)
library(ggplot2)
library(magrittr)
library(tidyr)
library(dplyr)
library(ggplot2)
library(magrittr)
library(tidyr)
library(dplyr)
library(ggplot2)
library(magrittr)
alc <- read.table("C:/Data/IODS-project/alc.csv", sep=",", header=TRUE)
colnames(alc)
alc %>% group_by(sex, high_use) %>% summarise(count = n(), mean_grade = mean(G3))
g1 <- ggplot(alc, aes(x = high_use, y = G3, col = sex))
g1 + geom_boxplot() + ylab("grade")
g2 <- ggplot(alc, aes(x = high_use, y = health, col = sex)) + ggtitle("Student health by alcohol consumption and sex")
g2 + geom_boxplot() + ylab("health")
g3 <- ggplot(alc, aes(x = high_use, y = age)) + ggtitle("Student age by alcohol consumption")
g3 + geom_boxplot() + ylab("age")
m <- glm(high_use ~ sex + G3 + health + age, data = alc, family = "binomial")
m
coef(m)
summary(m)
OR <- coef(m) %>% exp
CI <- confint(m) %>% exp
cbind(OR, CI)
m2 <- glm(high_use ~ sex + G3 + age, data = alc, family = "binomial")
probabilities <- predict(m2, type = "response")
alc <- mutate(alc, probability = probabilities)
alc <- mutate(alc, prediction = probability > 0.5)
select(alc, sex, G3, age, high_use, probability, prediction) %>% tail(10)
table(high_use = alc$high_use, prediction = alc$prediction)
g <- ggplot(alc, aes(x = probability, y = high_use, col = prediction))
g + geom_point()
loss_func <- function(class, prob) {
n_wrong <- abs(class - prob) > 0.5
mean(n_wrong)
}
loss_func(class = alc$high_use, prob = alc$probability)
library(boot)
cv <- cv.glm(data = alc, cost = loss_func, glmfit = m, K = 10)
cv$delta[1]
m3 <- glm(high_use ~ sex + G3, data = alc, family = "binomial")
cv <- cv.glm(data = alc, cost = loss_func, glmfit = m3, K = 10)
cv$delta[1]
m4 <- glm(high_use ~ sex + absences, data = alc, family = "binomial")
cv <- cv.glm(data = alc, cost = loss_func, glmfit = m4, K = 10)
cv$delta[1]
m5 <- glm(high_use ~ sex + age + studytime + failures + famsup + goout + famrel + health + absences, data = alc, family = "binomial")
summary(m5)
coef(m5)
cv <- cv.glm(data = alc, cost = loss_func, glmfit = m5, K = 10)
cv$delta[1]
g5 <- ggplot(alc, aes(x = high_use, y = studytime, col = sex)) + ggtitle("Student study time and by alcohol consumption and sex")
g5 + geom_boxplot() + ylab("study time")
g6 <- ggplot(alc, aes(x = high_use, y = famrel, col = sex))
g6 + geom_boxplot() + ylab("family relationship")
m6 <- glm(high_use ~ sex + studytime + goout + famrel + absences, data = alc, family = "binomial")
summary(m6)
coef(m6)
cv <- cv.glm(data = alc, cost = loss_func, glmfit = m6, K = 10)
cv$delta[1]
library(tidyr)
library(MASS)
data("Boston")
str(Boston)
summary(Boston)
pairs(Boston)
cor_matrix<-cor(Boston) %>% round(digit=2)
cor_matrix %>% round(cor_matrix)
corrplot(cor_matrix, method="circle", type = "upper", cl.pos = "b", tl.pos = "d", tl.cex = 0.6)
install.packages("corrplot")
library(tidyr)
library(MASS)
data("Boston")
str(Boston)
summary(Boston)
pairs(Boston)
cor_matrix<-cor(Boston) %>% round(digit=2)
cor_matrix %>% round(cor_matrix)
corrplot(cor_matrix, method="circle", type = "upper", cl.pos = "b", tl.pos = "d", tl.cex = 0.6)
library(tidyr)
library(corrplot)
library(MASS)
data("Boston")
str(Boston)
summary(Boston)
pairs(Boston)
cor_matrix<-cor(Boston) %>% round(digit=2)
cor_matrix %>% round(cor_matrix)
corrplot(cor_matrix, method="circle", type = "upper", cl.pos = "b", tl.pos = "d", tl.cex = 0.6)
library(GGally)
p <- ggpairs(Boston, mapping = aes(col = crim, alpha = 0.3), lower = list(combo = wrap("facethist", bins = 20)))
library(ggplot2)
p <- ggpairs(Boston, mapping = aes(col = crim, alpha = 0.3), lower = list(combo = wrap("facethist", bins = 20)))
p
p <- ggpairs(Boston, mapping = aes(alpha = 0.3), lower = list(combo = wrap("facethist", bins = 20)))
p
boston_scaled <- scale(Boston)
summary(boston_scaled)
class(boston_scaled)
boston_scaled <- as.data.frame(boston_scaled)
bins <- quantile(boston_scaled$crim)
bins
crime <- cut(boston_scaled$crim, breaks = bins, include.lowest = TRUE, c(label = "low", "med_low", "med_high", "high"))
table(crime)
boston_scaled <- dplyr::select(boston_scaled, -crim)
boston_scaled <- data.frame(boston_scaled, crime)
boston_scaled <- data.frame(boston_scaled, crime)
n <- nrow(boston_scaled)
ind <- sample(n,  size = n * 0.8)
train <- boston_scaled[ind,]
test <- boston_scaled[-ind,]
correct_classes <- test$crime
test <- dplyr::select(test, -crime)
lda.fit <- lda(crime ~ ., data = train)
library(tidyr)
library(ggplot2)
library(corrplot)
library(GGally)
library(MASS)
data("Boston")
str(Boston)
summary(Boston)
pairs(Boston)
p <- ggpairs(Boston, mapping = aes(alpha = 0.3), lower = list(combo = wrap("facethist", bins = 20)))
p
cor_matrix<-cor(Boston) %>% round(digit=2)
cor_matrix %>% round(cor_matrix)
corrplot(cor_matrix, method="circle", type = "upper", cl.pos = "b", tl.pos = "d", tl.cex = 0.6)
boston_scaled <- scale(Boston)
summary(boston_scaled)
class(boston_scaled)
boston_scaled <- as.data.frame(boston_scaled)
bins <- quantile(boston_scaled$crim)
bins
crime <- cut(boston_scaled$crim, breaks = bins, include.lowest = TRUE, c(label = "low", "med_low", "med_high", "high"))
table(crime)
boston_scaled <- dplyr::select(boston_scaled, -crim)
boston_scaled <- data.frame(boston_scaled, crime)
n <- nrow(boston_scaled)
ind <- sample(n,  size = n * 0.8)
train <- boston_scaled[ind,]
test <- boston_scaled[-ind,]
correct_classes <- test$crime
test <- dplyr::select(test, -crime)
lda.fit <- lda(crime ~ ., data = train)
lda.fit
classes <- as.numeric(train$crime)
plot(lda.fit, dimen = 2, col = classes, pch = classes)
lda.arrows(lda.fit, myscale = 3)
lda.arrows <- function(x, myscale = 1, arrow_heads = 0.1, color = "red", tex = 0.75, choices = c(1,2)){
heads <- coef(x)
arrows(x0 = 0, y0 = 0,
x1 = myscale * heads[,choices[1]],
y1 = myscale * heads[,choices[2]], col=color, length = arrow_heads)
text(myscale * heads[,choices], labels = row.names(heads),
cex = tex, col=color, pos=3)
}
plot(lda.fit, dimen = 2, col = classes, pch = classes)
lda.arrows(lda.fit, myscale = 3)
lda.pred <- predict(lda.fit, newdata = test)
table(correct = correct_classes, predicted = lda.pred$class)
error = sum(tt[row(tt) != col(tt)]) / sum(tt)
tt <- table(correct = correct_classes, predicted = lda.pred$class)
error = sum(tt[row(tt) != col(tt)]) / sum(tt)
sum(tt[row(tt) != col(tt)]) / sum(tt)
data('Boston')
boston_scaled <- scale(Boston)
boston_scaled <- as.data.frame(boston_scaled)
dist_eu <- dist(Boston)
summary (dist_eu)
dist_man <- dist(Boston, method = "manhattan")
summary(dist_man)
km <-kmeans(Boston, centers = 4)
pairs(Boston, col = km$cluster)
km <-kmeans(Boston, centers = 4)
pairs(Boston[6:10], col = km$cluster)
km <-kmeans(Boston, centers = 4)
pairs(Boston, col = km$cluster)
set.seed(123)
k_max <- 10
twcss <- sapply(1:k_max, function(k){kmeans(Boston, k)$tot.withinss})
qplot(x = 1:k_max, y = twcss, geom = 'line')
km <-kmeans(Boston, centers = 2)
pairs(Boston, col = km$cluster)
model_predictors <- dplyr::select(train, -crime)
dim(model_predictors)
dim(lda.fit$scaling)
matrix_product <- as.matrix(model_predictors) %*% lda.fit$scaling
matrix_product <- as.data.frame(matrix_product
install.packages("plotly")
install.packages("plotly")
plot_ly(x = matrix_product$LD1, y = matrix_product$LD2, z = matrix_product$LD3, type= 'scatter3d', mode='markers')
library(plotly)
plot_ly(x = matrix_product$LD1, y = matrix_product$LD2, z = matrix_product$LD3, type= 'scatter3d', mode='markers')
model_predictors <- dplyr::select(train, -crime)
dim(model_predictors)
dim(lda.fit$scaling)
matrix_product <- as.matrix(model_predictors) %*% lda.fit$scaling
matrix_product <- as.data.frame(matrix_product)
library(plotly)
plot_ly(x = matrix_product$LD1, y = matrix_product$LD2, z = matrix_product$LD3, type= 'scatter3d', mode='markers')
library(plotly)
plot_ly(x = matrix_product$LD1, y = matrix_product$LD2, z = matrix_product$LD3, type= 'scatter3d', mode='markers', col = crim)
plot_ly(x = matrix_product$LD1, y = matrix_product$LD2, z = matrix_product$LD3, type= 'scatter3d', mode='markers', col = crime)
plot_ly(x = matrix_product$LD1, y = matrix_product$LD2, z = matrix_product$LD3, type= 'scatter3d', mode='markers', col = km$cluster)
plot_ly(x = matrix_product$LD1, y = matrix_product$LD2, z = matrix_product$LD3, col = crime, type= 'scatter3d', mode='markers')
library(plotly)
plot_ly(x = matrix_product$LD1, y = matrix_product$LD2, z = matrix_product$LD3, col = crime, type= 'scatter3d', mode='markers')
plot_ly(x = matrix_product$LD1, y = matrix_product$LD2, z = matrix_product$LD3, type= 'scatter3d', mode='markers')
